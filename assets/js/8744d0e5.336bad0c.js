(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[530],{3712:function(e,t,o){"use strict";o.r(t),o.d(t,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u},default:function(){return l}});var n=o(2122),r=o(9756),a=(o(7294),o(3905)),c=["components"],i={sidebar_position:1},s={unversionedId:"core/apps",id:"core/apps",isDocsHomePage:!1,title:"Apps",description:"All Oblong apps start with a createOblongApp call.",source:"@site/docs/core/apps.md",sourceDirName:"core",slug:"/core/apps",permalink:"/oblong/docs/core/apps",editUrl:"https://github.com/travislwatson/oblong/edit/master/website/docs/core/apps.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:'Architecture: the "Heart" of Oblong',permalink:"/oblong/docs/architecture"},next:{title:"Commands",permalink:"/oblong/docs/core/commands"}},u=[{value:"Syntax",id:"syntax",children:[]},{value:"Configuration",id:"configuration",children:[{value:"<code>createStore</code>",id:"createstore",children:[]},{value:"<code>otherReducers</code>",id:"otherreducers",children:[]}]}],p={toc:u};function l(e){var t=e.components,o=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"All Oblong apps start with a ",(0,a.kt)("inlineCode",{parentName:"p"},"createOblongApp")," call."),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { createOblongApp } from 'oblong'\n\nconst OblongApp = createOblongApp({\n  // Optional configuration\n})\n\nexport const App = () => <OblongApp>Your code here</OblongApp>\n")),(0,a.kt)("p",null,"The output is a component to wrap around the contents of your application. It will set up necessary dependencies such as Redux, React-Redux, and Redux Dev Tools."),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("h3",{id:"createstore"},(0,a.kt)("inlineCode",{parentName:"h3"},"createStore")),(0,a.kt)("p",null,"Oblong creates a Redux store automatically for you by default. If you need more control of your store creation, you can supply your own ",(0,a.kt)("inlineCode",{parentName:"p"},"createStore")," function. This function must accept and use the reducer supplied to it. Oblong's reducer must be your root reducer! If you need additional reducers, you must use the ",(0,a.kt)("a",{parentName:"p",href:"#otherreducers"},"otherReducers")," functionality instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"combineReducers"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { createStore } from 'redux'\n\nconst OblongApp = createOblongApp({\n  createStore: (reducer) => createStore(reducer),\n})\n")),(0,a.kt)("h3",{id:"otherreducers"},(0,a.kt)("inlineCode",{parentName:"h3"},"otherReducers")),(0,a.kt)("p",null,"If you have existing Redux code, custom reducer requirements, a third party library, or any other Redux need you can supply an object of additional reducers. This option functions much like ",(0,a.kt)("inlineCode",{parentName:"p"},"combineReducers"),", but it has no safety built in. This is of particular note with collisions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const actionCount = (previous = 0) => previous + 1\n\nconst OblongApp = createOblongApp({\n  otherReducers: { actionCount },\n})\n")))}l.isMDXComponent=!0}}]);